{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubal thaquree\\\\react\\\\reacttut\\\\portfolio\\\\src\\\\Component\\\\Animated.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animated = _ref => {\n  _s();\n  let {\n    children,\n    props\n  } = _ref;\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    const sectionObserver = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // Add your animation logic here\n          entry.target.classList.add('animate');\n          props.handleAnimation();\n        } else {\n          // Remove the animation class if needed\n          entry.target.classList.remove('animate');\n        }\n      });\n    });\n    sectionObserver.observe(sectionRef.current);\n    return () => {\n      sectionObserver.unobserve(sectionRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    ref: sectionRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(Animated, \"O9MYfDkQexHh+zrn37J6HLSAdf8=\");\n_c = Animated;\nexport default Animated;\nvar _c;\n$RefreshReg$(_c, \"Animated\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Animated","_ref","_s","children","props","sectionRef","sectionObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","handleAnimation","remove","observe","current","unobserve","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rubal thaquree/react/reacttut/portfolio/src/Component/Animated.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst Animated = ({ children,props }) => {\r\n  const sectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const sectionObserver = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          // Add your animation logic here\r\n          entry.target.classList.add('animate');\r\n          props.handleAnimation();\r\n        } else {\r\n          // Remove the animation class if needed\r\n          entry.target.classList.remove('animate');\r\n        }\r\n      });\r\n    });\r\n\r\n    sectionObserver.observe(sectionRef.current);\r\n\r\n    return () => {\r\n      sectionObserver.unobserve(sectionRef.current);\r\n    };\r\n  }, []);\r\n\r\n  return <section ref={sectionRef}>{children}</section>;\r\n};\r\n\r\nexport default Animated;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,QAAQ;IAACC;EAAM,CAAC,GAAAH,IAAA;EAClC,MAAMI,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MAC5DA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB;UACAD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;UACrCV,KAAK,CAACW,eAAe,CAAC,CAAC;QACzB,CAAC,MAAM;UACL;UACAL,KAAK,CAACE,MAAM,CAACC,SAAS,CAACG,MAAM,CAAC,SAAS,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFV,eAAe,CAACW,OAAO,CAACZ,UAAU,CAACa,OAAO,CAAC;IAE3C,OAAO,MAAM;MACXZ,eAAe,CAACa,SAAS,CAACd,UAAU,CAACa,OAAO,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOnB,OAAA;IAASqB,GAAG,EAAEf,UAAW;IAAAF,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACvD,CAAC;AAACtB,EAAA,CAzBIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}