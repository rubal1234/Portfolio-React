{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubal thaquree\\\\react\\\\reacttut\\\\portfolio\\\\src\\\\Component\\\\Skill.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../Css/Skill.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skill = () => {\n  _s();\n  const [progress, setProgress] = useState({});\n  const skillRef = useRef(null);\n  let intervalIds = useRef([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.25) {\n          animateSkillProgress();\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.25\n    });\n    if (skillRef.current) {\n      observer.observe(skillRef.current);\n    }\n    return () => {\n      observer.disconnect();\n      intervalIds.current.forEach(intervalId => clearInterval(intervalId));\n    };\n  }, []);\n  const animateSkillProgress = () => {\n    intervalIds.current = [];\n    skills.forEach((skill, index) => {\n      const {\n        stop,\n        id\n      } = skill;\n      const intervalId = setInterval(() => {\n        setProgress(prevProgress => {\n          const newProgress = {\n            ...prevProgress\n          };\n          if (!newProgress[id]) {\n            newProgress[id] = 0;\n          }\n          if (newProgress[id] < stop) {\n            newProgress[id] += 1;\n          } else {\n            clearInterval(intervalId);\n          }\n          return newProgress;\n        });\n      }, 100);\n      intervalIds.current.push(intervalId);\n    });\n  };\n  const calculateStrokeDasharray = progressValue => {\n    const circumference = 2 * Math.PI * 18;\n    const progressPercentage = progressValue / 100 * circumference;\n    const remainingPercentage = circumference - progressPercentage;\n    return `${progressPercentage}px ${remainingPercentage}px`;\n  };\n  const skills = [{\n    name: 'Java',\n    stop: 46,\n    id: 'java'\n  }, {\n    name: 'Php',\n    stop: 40,\n    id: 'php'\n  }, {\n    name: 'React',\n    stop: 49,\n    id: 'react'\n  }, {\n    name: 'jQuery',\n    stop: 57,\n    id: 'jQuery'\n  }\n  // Add more skills here with their respective stop values and IDs\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"skill\",\n    ref: skillRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-top\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"section-title\",\n            children: [\"Ski\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"ll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 18\n            }, this), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: skills.map((skill, index) => {\n        const {\n          name,\n          id\n        } = skill;\n        const skillProgress = progress[id] || 0;\n        const strokeDasharray = calculateStrokeDasharray(skillProgress);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"countdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 40 40\",\n              children: [/*#__PURE__*/_jsxDEV(\"g\", {\n                transform: \"translate(20 20) rotate(-90)\",\n                strokeWidth: \"4\",\n                fill: \"none\",\n                strokeLinecap: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  id: \"c3\",\n                  r: \"18\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  id: \"c2\",\n                  r: \"18\",\n                  strokeDasharray: strokeDasharray\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  id: \"c1\",\n                  r: \"2\",\n                  cx: \"18\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"20\",\n                y: \"20\",\n                children: [skillProgress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Skill, \"JXaPwoynwYvkKTpYJ9cLGQ7SVQo=\");\n_c = Skill;\nexport default Skill;\nvar _c;\n$RefreshReg$(_c, \"Skill\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Skill","_s","progress","setProgress","skillRef","intervalIds","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","animateSkillProgress","unobserve","target","threshold","current","observe","disconnect","intervalId","clearInterval","skills","skill","index","stop","id","setInterval","prevProgress","newProgress","push","calculateStrokeDasharray","progressValue","circumference","Math","PI","progressPercentage","remainingPercentage","name","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","skillProgress","strokeDasharray","viewBox","transform","strokeWidth","fill","strokeLinecap","r","cx","x","y","_c","$RefreshReg$"],"sources":["C:/Users/rubal thaquree/react/reacttut/portfolio/src/Component/Skill.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../Css/Skill.css';\r\n\r\nconst Skill = () => {\r\n  const [progress, setProgress] = useState({});\r\n  const skillRef = useRef(null);\r\n  let intervalIds = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.25) {\r\n          animateSkillProgress();\r\n          observer.unobserve(entry.target);\r\n        }\r\n      });\r\n    }, {\r\n      threshold: 0.25\r\n    });\r\n\r\n    if (skillRef.current) {\r\n      observer.observe(skillRef.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n      intervalIds.current.forEach((intervalId) => clearInterval(intervalId));\r\n    };\r\n  }, []);\r\n\r\n  const animateSkillProgress = () => {\r\n    intervalIds.current = [];\r\n\r\n    skills.forEach((skill, index) => {\r\n      const { stop, id } = skill;\r\n\r\n      const intervalId = setInterval(() => {\r\n        setProgress((prevProgress) => {\r\n          const newProgress = { ...prevProgress };\r\n\r\n          if (!newProgress[id]) {\r\n            newProgress[id] = 0;\r\n          }\r\n\r\n          if (newProgress[id] < stop) {\r\n            newProgress[id] += 1;\r\n          } else {\r\n            clearInterval(intervalId);\r\n          }\r\n\r\n          return newProgress;\r\n        });\r\n      }, 100);\r\n\r\n      intervalIds.current.push(intervalId);\r\n    });\r\n  };\r\n\r\n  const calculateStrokeDasharray = (progressValue) => {\r\n    const circumference = 2 * Math.PI * 18;\r\n    const progressPercentage = (progressValue / 100) * circumference;\r\n    const remainingPercentage = circumference - progressPercentage;\r\n    return `${progressPercentage}px ${remainingPercentage}px`;\r\n  };\r\n\r\n  const skills = [\r\n    { name: 'Java', stop: 46, id: 'java' },\r\n    { name: 'Php', stop: 40, id: 'php' },\r\n    { name: 'React', stop: 49, id: 'react' },\r\n    { name: 'jQuery', stop: 57, id: 'jQuery' },\r\n    // Add more skills here with their respective stop values and IDs\r\n  ];\r\n\r\n  return (\r\n    <div className='container' id='skill' ref={skillRef}>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          <div className='service-top'>\r\n            <h1 className='section-title'>\r\n              Ski<span>ll</span>s\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        {skills.map((skill, index) => {\r\n          const { name, id } = skill;\r\n          const skillProgress = progress[id] || 0;\r\n          const strokeDasharray = calculateStrokeDasharray(skillProgress);\r\n\r\n          return (\r\n            <div className='col-3 my-5' key={index}>\r\n              <div id='countdown'>\r\n                <svg viewBox='0 0 40 40'>\r\n                  <g\r\n                    transform='translate(20 20) rotate(-90)'\r\n                    strokeWidth='4'\r\n                    fill='none'\r\n                    strokeLinecap='round'\r\n                  >\r\n                    <circle id='c3' r='18' />\r\n                    <circle id='c2' r='18' strokeDasharray={strokeDasharray} />\r\n                    <circle id='c1' r='2' cx='18' />\r\n                  </g>\r\n                  <text x='20' y='20'>{skillProgress}%</text>\r\n                </svg>\r\n                <div className='text-center'>\r\n                  <h1>{name}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skill;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}