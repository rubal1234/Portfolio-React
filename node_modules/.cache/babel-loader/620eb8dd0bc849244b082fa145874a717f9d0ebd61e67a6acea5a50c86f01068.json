{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubal thaquree\\\\react\\\\reacttut\\\\portfolio\\\\src\\\\Component\\\\Animated.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animated = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const sectionRef = useRef(null);\n  const [animateOnce, setAnimateOnce] = useState(false);\n  useEffect(() => {\n    const sectionObserver = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !animateOnce) {\n          entry.target.classList.add('animate');\n          setAnimateOnce(true);\n        }\n      });\n    }, {\n      threshold: 0.5\n    } // Adjust the threshold as needed\n    );\n\n    sectionObserver.observe(sectionRef.current);\n    return () => {\n      sectionObserver.unobserve(sectionRef.current);\n    };\n  }, [animateOnce]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    ref: sectionRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(Animated, \"Ww85KxzXaLX5F/1HH5R2+63c2uE=\");\n_c = Animated;\nexport default Animated;\nvar _c;\n$RefreshReg$(_c, \"Animated\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Animated","_ref","_s","children","sectionRef","animateOnce","setAnimateOnce","sectionObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","threshold","observe","current","unobserve","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rubal thaquree/react/reacttut/portfolio/src/Component/Animated.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst Animated = ({ children }) => {\r\n  const sectionRef = useRef(null);\r\n  const [animateOnce, setAnimateOnce] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const sectionObserver = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting && !animateOnce) {\r\n            entry.target.classList.add('animate');\r\n            setAnimateOnce(true);\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.5 } // Adjust the threshold as needed\r\n    );\r\n\r\n    sectionObserver.observe(sectionRef.current);\r\n\r\n    return () => {\r\n      sectionObserver.unobserve(sectionRef.current);\r\n    };\r\n  }, [animateOnce]);\r\n\r\n  return <section ref={sectionRef}>{children}</section>;\r\n};\r\n\r\nexport default Animated;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC5B,MAAMG,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAG,IAAIC,oBAAoB,CAC7CC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,IAAI,CAACP,WAAW,EAAE;UACxCM,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;UACrCT,cAAc,CAAC,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEU,SAAS,EAAE;IAAI,CAAC,CAAC;IACrB,CAAC;;IAEDT,eAAe,CAACU,OAAO,CAACb,UAAU,CAACc,OAAO,CAAC;IAE3C,OAAO,MAAM;MACXX,eAAe,CAACY,SAAS,CAACf,UAAU,CAACc,OAAO,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAEjB,oBAAON,OAAA;IAASqB,GAAG,EAAEhB,UAAW;IAAAD,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACvD,CAAC;AAACtB,EAAA,CAzBIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}